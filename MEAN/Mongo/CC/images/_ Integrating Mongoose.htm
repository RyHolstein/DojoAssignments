<!DOCTYPE html>
<!-- saved from url=(0042)http://learn.codingdojo.com/m/4/3720/25007 -->
<html lang="en" class=""><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title> | Integrating Mongoose</title>
    <link href="http://learn.codingdojo.com/assets/black_ninja-db2fe4f1051012ab89c235cc9bf3cd5a.ico" rel="shortcut icon" type="image/vnd.microsoft.icon">
    <link href="./_ Integrating Mongoose_files/chapter_modules_layout-10877b63ecaf40d053cbc3eca7abac66.css" media="all" rel="stylesheet">
    <link href="./_ Integrating Mongoose_files/modules_layout-d84f0989f3acdff02914b47f05c2b0ea.css" media="all" rel="stylesheet">


    <script src="./_ Integrating Mongoose_files/chapter_modules_scripts-1e3ef426b2d22d2a89b8995969431d81.js"></script><style></style><script src="./_ Integrating Mongoose_files/clipboard.min.js"></script>
    <script src="./_ Integrating Mongoose_files/modules_scripts-9b1bb08e3179f2af0314d4055160c3d8.js"></script>

    <meta content="authenticity_token" name="csrf-param">
<meta content="I2Embjwa2Y+DYKBY723mg0KkrRtDSmr0FTFtDKSxYWA=" name="csrf-token">
    <script>
//<![CDATA[
var AUTH_TOKEN = 'I2Embjwa2Y+DYKBY723mg0KkrRtDSmr0FTFtDKSxYWA=';
//]]>
</script>
    
      <script src="./_ Integrating Mongoose_files/socket.io.js" type="text/javascript"></script>

<style type="text/css">.fancybox-margin{margin-right:0px;}</style></head>
<body>
<input type="checkbox" id="activate_menu_checkbox" class="hidden" checked="checked">


<div id="menu_button">
		<label for="activate_menu_checkbox" class="glyphicon glyphicon-menu-hamburger"></label>
		<a href="http://learn.codingdojo.com/dashboard#tracks_container" class="button_text unload_link">
			<div class="track_button">
				Back to Tracks
			</div>
		</a>
	<!-- <label label for="activate_menu_checkbox" class="glyphicon menu_indicator"></label> -->
</div>  

<div class="hidden_chapter_title hidden"><a class="chapter_title" href="javascript:void(0)">
					<h3><span class="chapter-title">Integrating Mongoose</span></h3>
					<!--  -->
					
						<div class="progress_container">
							<span class="chapter_item_progress">
								60%
							</span>
						</div>
				</a></div>
<div id="sidebar" class="nano " style="height: 100px;">
	
	<ul id="chapter_list" class="nano-content  chapter-list" data-course-id="1226" tabindex="0">
			<li class="">



				<a class="chapter_title unload_link" href="http://learn.codingdojo.com/m/4/3719">
					<h3><span class="chapter-title">MongoDB</span></h3>
					<!--  -->
					
						<div class="progress_container">
							<span class="chapter_item_progress">
								64%
							</span>
						</div>
				</a>
				<ul class="tab_list  module-list" id="module_list_3719" data-chapter-id="3720">



				</ul>
			</li>
			<li class="active">



				<a class="chapter_title unload_link" href="http://learn.codingdojo.com/m/4/3720">
					<h3><span class="chapter-title">Integrating Mongoose</span></h3>
					<!--  -->
					
						<div class="progress_container">
							<span class="chapter_item_progress">
								60%
							</span>
						</div>
				</a>
				<ul class="tab_list  module-list" id="module_list_3720" data-chapter-id="3720">




							<li class="text completed_tab" data-module-id="25004">
									<a class="tab_title unload_link" href="http://learn.codingdojo.com/m/4/3720/25004">
									<div class="tab_label"><span class="tab_icon"></span></div>
									<span class="tab_details" id="quiz_id_25004">
										<h4>Intro to Mongoose</h4> <!-- % if contents["type"] == QUIZ_MODULE % -->
									</span>
								</a>
							</li>

							<li class="text completed_tab" data-module-id="25865">
									<a class="tab_title unload_link" href="http://learn.codingdojo.com/m/4/3720/25865">
									<div class="tab_label"><span class="tab_icon"></span></div>
									<span class="tab_details" id="quiz_id_25865">
										<h4>Mongoose Commands</h4> <!-- % if contents["type"] == QUIZ_MODULE % -->
									</span>
								</a>
							</li>

							<li class="text completed_tab" data-module-id="25013">
									<a class="tab_title unload_link" href="http://learn.codingdojo.com/m/4/3720/25013">
									<div class="tab_label"><span class="tab_icon"></span></div>
									<span class="tab_details" id="quiz_id_25013">
										<h4>Dependencies</h4> <!-- % if contents["type"] == QUIZ_MODULE % -->
									</span>
								</a>
							</li>

							<li class="quiz " data-module-id="25008">
									<a class="tab_title unload_link" href="http://learn.codingdojo.com/m/4/3720/25008">
									<div class="tab_label"><span class="tab_icon"></span></div>
									<span class="tab_details" id="quiz_id_25008">
										<h4>Quiz I</h4> <!-- % if contents["type"] == QUIZ_MODULE % -->
									</span>
								</a>
							</li>

							<li class="text completed_tab" data-module-id="25006">
									<a class="tab_title unload_link" href="http://learn.codingdojo.com/m/4/3720/25006">
									<div class="tab_label"><span class="tab_icon"></span></div>
									<span class="tab_details" id="quiz_id_25006">
										<h4>Validations</h4> <!-- % if contents["type"] == QUIZ_MODULE % -->
									</span>
								</a>
							</li>

							<li class="to_do completed_tab" data-module-id="25009">
									<a class="tab_title unload_link" href="http://learn.codingdojo.com/m/4/3720/25009">
									<div class="tab_label"><span class="tab_icon"></span></div>
									<span class="tab_details" id="quiz_id_25009">
										<h4>Quoting Dojo Redux</h4> <!-- % if contents["type"] == QUIZ_MODULE % -->
									</span>
								</a>
							</li>

							<li class="to_do " data-module-id="25010">
									<a class="tab_title unload_link" href="http://learn.codingdojo.com/m/4/3720/25010">
									<div class="tab_label"><span class="tab_icon"></span></div>
									<span class="tab_details" id="quiz_id_25010">
										<h4>Mongoose Dashboard</h4> <!-- % if contents["type"] == QUIZ_MODULE % -->
									</span>
								</a>
							</li>

							<li class="text completed_tab current" data-module-id="25007">
									<a class="tab_title unload_link" href="http://learn.codingdojo.com/m/4/3720/25007">
									<div class="tab_label"><span class="tab_icon"></span></div>
									<span class="tab_details" id="quiz_id_25007">
										<h4>Associations</h4> <!-- % if contents["type"] == QUIZ_MODULE % -->
									</span>
								</a>
							</li>

							<li class="quiz " data-module-id="25012">
									<a class="tab_title unload_link" href="http://learn.codingdojo.com/m/4/3720/25012">
									<div class="tab_label"><span class="tab_icon"></span></div>
									<span class="tab_details" id="quiz_id_25012">
										<h4>Quiz II</h4> <!-- % if contents["type"] == QUIZ_MODULE % -->
									</span>
								</a>
							</li>

							<li class="to_do " data-module-id="25011">
									<a class="tab_title unload_link" href="http://learn.codingdojo.com/m/4/3720/25011">
									<div class="tab_label"><span class="tab_icon"></span></div>
									<span class="tab_details" id="quiz_id_25011">
										<h4>Message Board</h4> <!-- % if contents["type"] == QUIZ_MODULE % -->
									</span>
								</a>
							</li>
				</ul>
			</li>
			<li class="">



				<a class="chapter_title unload_link" href="http://learn.codingdojo.com/m/4/3721">
					<h3><span class="chapter-title">Server-side Modularization</span></h3>
					<!--  -->
					
						<div class="progress_container">
							<span class="chapter_item_progress">
								50%
							</span>
						</div>
				</a>
				<ul class="tab_list  module-list" id="module_list_3721" data-chapter-id="3720">



				</ul>
			</li>
	</ul>
<div class="nano-pane" style="display: none;"><div class="nano-slider" style="height: 847px; transform: translate(0px, 0px);"></div></div></div>
<nav id="main_navigation">
	<div id="navbar">
		<ul id="breadcrumbs" class="left_align">
			<li>MEAN</li>
			<li>MongoDB &amp; Mongoose v2</li>
			<li id="chapter_title">Integrating Mongoose</li>
			<li class="module_title">Associations</li>
		</ul>
		<div id="profile_block" class="pull-right">
			<img src="./_ Integrating Mongoose_files/profile_pic.png" alt="Ryan" class="profile_image">
			<div class="dropdown">
				<a href="http://learn.codingdojo.com/m/4/3720/25007#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
					<div id="user_name_block">
						<div>
							<span class="decor_text">Hello,  </span> 
							<span class="user_name">Ryan H</span>
						</div>
					</div>
					<span class="caret"></span>
				</a>
				<div class="dropdown-menu dropdown-menu-right" role="menu">
					<div class="dropdown_content">	
						<ul>
							<li>
								<a href="http://learn.codingdojo.com/dashboard">Dashboard</a>
								<span class="glyphicon glyphicon-home pull-right" aria-hidden="true"></span>
							</li>
							<li>
								<a href="http://learn.codingdojo.com/dashboard#tracks_container">Tracks</a>
								<span class="glyphicon glyphicon-book pull-right" aria-hidden="true"></span>
							</li>
							<li data-target="#my_account_modal" data-toggle="modal">
								<a href="http://learn.codingdojo.com/m/4/3720/25007#" class="view_user_info">My Account</a>
								<span class="glyphicon glyphicon-user pull-right" aria-hidden="true"></span>
							</li>
							<li class="dropdown_buttons">
								<a id="signout_button" class="btn btn-primary btn-lg btn-block unload_link" href="http://learn.codingdojo.com/signout">Log Out</a>
							</li>
						</ul>
					</div>
				</div>
			</div>
		</div>
	</div>
</nav>

<section id="main_content">
    	<div id="content_navigation">

		<div id="return_button" class="right_align">
			<a href="http://learn.codingdojo.com/dashboard" class="unload_link">
				<span class="glyphicon glyphicon-th-large"></span><span>Home</span> 
			</a>
			<input type="hidden" name="authenticity_token" value="I2Embjwa2Y+DYKBY723mg0KkrRtDSmr0FTFtDKSxYWA=" current-module="25007"> 
		</div>
	</div>
	<div id="section_content">
	<div id="assignment-metadata"></div>
		<div class="content_block">
			<div id="module_container">
				<div class="module_content module_content_block">

								<div class="module_description active_lesson active_lesson_with_video ">
									
            
            
            
            
            
            <h1>Associations</h1><p>
 Using Mongoose, we are able to create associations between Mongo objects.&nbsp;</p><h3>How does it work?</h3><p>
 Basically, all we will do is associate two different Mongoose models together using a bit of additional syntax. &nbsp;In this example, we're going to show you how to affiliate a post model with a comment model. This is a&nbsp;&nbsp;
 <strong>one-to-many relationship&nbsp;</strong>( 1 Post, to Many Comments ).&nbsp;</p><p>
 Note: One-to-one relationships are easily accomplished with a small change in syntax.&nbsp;</p><h3>Setup</h3><p>
 Before you define your models, you must establish a&nbsp;
 <em>Schema</em>&nbsp;variable like the one below. You'll be calling this variable inside of all the models that require the associations. Why? Well, this will enable your models to read and understand those huge&nbsp;<em>ObjectId&nbsp;</em>attributes that MongoDB automatically generated!</p>
<pre data-language="javascript" class=" code-toolbar  language-javascript"><code class="  language-javascript"><span class="token keyword">var</span> Schema <span class="token operator">=</span> mongoose<span class="token punctuation">.</span>Schema<span class="token punctuation">;</span>
</code><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></pre><h3>Post Model</h3>
<pre data-language="javascript" class=" code-toolbar  language-javascript"><code class="  language-javascript"><span class="token keyword">var</span> Schema <span class="token operator">=</span> mongoose<span class="token punctuation">.</span>Schema<span class="token punctuation">;</span>
<span class="token keyword">var</span> postSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 text<span class="token punctuation">:</span> <span class="token punctuation">{</span> type<span class="token punctuation">:</span> String<span class="token punctuation">,</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> 
 comments<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>type<span class="token punctuation">:</span> Schema<span class="token punctuation">.</span>Types<span class="token punctuation">.</span>ObjectId<span class="token punctuation">,</span> ref<span class="token punctuation">:</span> <span class="token string">'Comment'</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> timestamps<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// The 'type' property of the object inside of the array is an attribute</span>
<span class="token comment" spellcheck="true">// that tells Mongoose what to look for.</span>
</code><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></pre><p>
 Do you see what is going on here? First of all, we know this is a&nbsp;&nbsp;
 <strong>one-to-many relationship</strong>&nbsp;because the <strong>comments property is an array</strong>, meaning the&nbsp;<strong>post model</strong>&nbsp;will have many comments. Secondly, the object we are going to have many of has two properties:<strong>&nbsp;type&nbsp;</strong>and<strong>&nbsp;ref.</strong>&nbsp;The&nbsp;<strong>type property</strong>&nbsp;tells Mongoose the<strong>&nbsp;unique identifier&nbsp;</strong>for our association, which for us is the&nbsp;<strong>ObjectID</strong>&nbsp;of each&nbsp;<strong>comment.</strong>&nbsp;The<strong>&nbsp;ref&nbsp;</strong>property tells Mongoose what model the unique identifier is associated with. &nbsp;Long story short:</p><h4>Mongoose is just keeping an array full of associated comment IDs</h4><p>
 Which is, if you think about it, the only way we could accomplish this with MongoDB as it is.</p><h3>Comment Model</h3>
<pre data-language="javascript" class=" code-toolbar  language-javascript"><code class="  language-javascript"><span class="token comment" spellcheck="true">// What would we need to add to make the below snippet work properly? Read your console!</span>
<span class="token keyword">var</span> commentSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 <span class="token comment" spellcheck="true">// since this is a reference to a different document, the _ is the naming convention!</span>
 _post<span class="token punctuation">:</span> <span class="token punctuation">{</span>type<span class="token punctuation">:</span> Schema<span class="token punctuation">.</span>Types<span class="token punctuation">.</span>ObjectId<span class="token punctuation">,</span> ref<span class="token punctuation">:</span> <span class="token string">'Post'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
 text<span class="token punctuation">:</span> <span class="token punctuation">{</span> type<span class="token punctuation">:</span> String<span class="token punctuation">,</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>timestamps<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></pre><p>
 <strong>Now we must tell the comment model it belongs to a post model</strong>. When we are referencing a model that another model belongs to,&nbsp;<strong>we use an underscore ( _ )</strong>&nbsp;to indicate this is another model. Note the small variation in syntax in the type property.</p><h3>Retrieving the data</h3><p>
 We're going to query our data a little bit differently than we have before, but the changes aren't huge. The important methods here are the&nbsp;&nbsp;
 <strong>.populate() method&nbsp;</strong>and&nbsp;<strong>the .exec() method</strong>. The&nbsp;<strong>.populate()&nbsp;</strong>method basically tells your post model to gather the associated comments and the&nbsp;<strong>.exec()</strong>&nbsp;method actually fires the action.</p><h3>Here is how to get the comments for one post:</h3>
<pre data-language="javascript" class=" code-toolbar  language-javascript"><code class="  language-javascript"><span class="token comment" spellcheck="true">// just an example route, your routes may look different</span>
app<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/posts/:id'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment" spellcheck="true">// the populate method is what grabs all of the comments using their IDs stored in the </span>
<span class="token comment" spellcheck="true">// comment property array of the post document!</span>
 Post<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span>_id<span class="token punctuation">:</span> req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id<span class="token punctuation">}</span><span class="token punctuation">)</span>
 <span class="token punctuation">.</span><span class="token function">populate</span><span class="token punctuation">(</span><span class="token string">'comments'</span><span class="token punctuation">)</span>
 <span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> post<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">'post'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>post<span class="token punctuation">:</span> post<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></pre><h3>Adding a comment</h3><p>
 If you've done anything with Rails, you know that for an&nbsp;
 <em>activeRecord</em>&nbsp;association, as long as you update one end of the relationship, (post or comment in this case) the other end will be updated automatically. Sadly, Mongoose is not as thorough. In order to add a comment to a preexisting post, we must update both parties. The code to do that is as follows:</p>
<pre data-language="javascript" class=" code-toolbar  language-javascript"><code class="  language-javascript"> <span class="token comment" spellcheck="true">//  just a sample route.  Post request to update a post.</span>
 <span class="token comment" spellcheck="true">//  your routes will probably look different.</span>
 app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/posts/:id'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">{</span>
    Post<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span>_id<span class="token punctuation">:</span> req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> post<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// data from form on the front end</span>
        <span class="token keyword">var</span> comment <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Comment</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//  set the reference like this:</span>
        comment<span class="token punctuation">.</span>_post <span class="token operator">=</span> post<span class="token punctuation">.</span>_id<span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// now save both to the DB</span>
        comment<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
                post<span class="token punctuation">.</span>comments<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>comment<span class="token punctuation">)</span><span class="token punctuation">;</span>
                post<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
                     <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Error'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                     <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                          res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                     <span class="token punctuation">}</span>
                 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></pre><p>
 This process is straightforward, but a little tedious. This functionality is useful for basic one-to-many or one-to-one relationships. Obviously, the syntax would change for a one-to-one relationship, but the execution is still the same. Keep in mind this process could get pretty messy for a many-to-many relationship, so avoid building one if at all possible in your app. That being said, if you are building an application that uses a many-to-many relationship,&nbsp;
 <strong>you probably shouldn't be using MongoDB in the first place!</strong></p><p>
 Here it is all together.</p>
<pre data-language="javascript" class=" code-toolbar  language-javascript"><code class="  language-javascript"><span class="token comment" spellcheck="true">// define Schema variable</span>
<span class="token keyword">var</span> Schema <span class="token operator">=</span> mongoose<span class="token punctuation">.</span>Schema<span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// define Post Schema</span>
<span class="token keyword">var</span> PostSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 text<span class="token punctuation">:</span> <span class="token punctuation">{</span>type<span class="token punctuation">:</span> String<span class="token punctuation">,</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> 
 comments<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>type<span class="token punctuation">:</span> Schema<span class="token punctuation">.</span>Types<span class="token punctuation">.</span>ObjectId<span class="token punctuation">,</span> ref<span class="token punctuation">:</span> <span class="token string">'Comment'</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>timestamps<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// define Comment Schema</span>
<span class="token keyword">var</span> CommentSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 _post<span class="token punctuation">:</span> <span class="token punctuation">{</span>type<span class="token punctuation">:</span> Schema<span class="token punctuation">.</span>Types<span class="token punctuation">.</span>ObjectId<span class="token punctuation">,</span> ref<span class="token punctuation">:</span> <span class="token string">'Post'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
 text<span class="token punctuation">:</span> <span class="token punctuation">{</span>type<span class="token punctuation">:</span> String<span class="token punctuation">,</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>timestamps<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// set our models by passing them their respective Schemas</span>
mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">'Post'</span><span class="token punctuation">,</span> PostSchema<span class="token punctuation">)</span><span class="token punctuation">;</span>
mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">'Comment'</span><span class="token punctuation">,</span> CommentSchema<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// store our models in variables</span>
<span class="token keyword">var</span> Post <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">'Post'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> Comment <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">'Comment'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// route for getting a particular post and comments</span>
app<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/posts/:id'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">{</span>
 Post<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span>_id<span class="token punctuation">:</span> req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id<span class="token punctuation">}</span><span class="token punctuation">)</span>
 <span class="token punctuation">.</span><span class="token function">populate</span><span class="token punctuation">(</span><span class="token string">'comments'</span><span class="token punctuation">)</span>
 <span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> post<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">'post'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>post<span class="token punctuation">:</span> post<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// route for creating one comment with the parent post id</span>
app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/posts/:id'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">{</span>
  Post<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span>_id<span class="token punctuation">:</span> req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> post<span class="token punctuation">)</span><span class="token punctuation">{</span>
         <span class="token keyword">var</span> comment <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Comment</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>
         comment<span class="token punctuation">.</span>_post <span class="token operator">=</span> post<span class="token punctuation">.</span>_id<span class="token punctuation">;</span>
         post<span class="token punctuation">.</span>comments<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>comment<span class="token punctuation">)</span><span class="token punctuation">;</span>
         comment<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
                 post<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
                       <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Error'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> 
                       <span class="token keyword">else</span> <span class="token punctuation">{</span> res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
                 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></pre><h3><strong>Embedded Documents</strong></h3><p>
 Let's say you find yourself&nbsp;
 <strong>always retrieving associative documents in groups, and never by themselves</strong>. Luckily for you, there is a better way! Consider the example below:</p>
<pre data-language="javascript" class=" code-toolbar  language-javascript"><code class="  language-javascript"><span class="token punctuation">{</span>
   _id<span class="token punctuation">:</span> <span class="token string">"dojo"</span><span class="token punctuation">,</span>
   name<span class="token punctuation">:</span> <span class="token string">"CodingDojo"</span>
<span class="token punctuation">}</span>
<span class="token punctuation">{</span>
   business_id<span class="token punctuation">:</span> <span class="token string">"dojo"</span><span class="token punctuation">,</span>
   street<span class="token punctuation">:</span> <span class="token string">"10777 Main Street"</span><span class="token punctuation">,</span>
   city<span class="token punctuation">:</span> <span class="token string">"Bellevue"</span><span class="token punctuation">,</span>
   state<span class="token punctuation">:</span> <span class="token string">"WA"</span><span class="token punctuation">,</span>
   zip<span class="token punctuation">:</span> <span class="token string">"98004"</span>
<span class="token punctuation">}</span>
<span class="token punctuation">{</span>
   business_id<span class="token punctuation">:</span> <span class="token string">"dojo"</span><span class="token punctuation">,</span>
   street<span class="token punctuation">:</span> <span class="token string">"1980 Zanker Road"</span><span class="token punctuation">,</span>
   city<span class="token punctuation">:</span> <span class="token string">"San Jose"</span><span class="token punctuation">,</span>
   state<span class="token punctuation">:</span> <span class="token string">"CA"</span><span class="token punctuation">,</span>
   zip<span class="token punctuation">:</span> <span class="token string">"95112"</span>
<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></pre><p>
 Hmm. You can probably tell that the above example will take a ton of queries to properly retrieve. First, you need to get the business document with the&nbsp;
 <strong>_id attribute of 'dojo'</strong>, then you need to hunt around for&nbsp;<strong>every location with the business_id of 'dojo'</strong>! That's double the queries! Let's say that in your web application, you're never pulling businesses by themselves, but always with locations at the same time. That's a lot of work! Consider the below example:</p>
<pre data-language="javascript" class=" code-toolbar  language-javascript"><code class="  language-javascript"><span class="token punctuation">{</span>
   name<span class="token punctuation">:</span> <span class="token string">"CodingDojo"</span><span class="token punctuation">,</span>
   locations<span class="token punctuation">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
    street<span class="token punctuation">:</span> <span class="token string">"10777 Main Street"</span><span class="token punctuation">,</span>
                  city<span class="token punctuation">:</span> <span class="token string">"Bellevue"</span><span class="token punctuation">,</span>
                  state<span class="token punctuation">:</span> <span class="token string">"WA"</span><span class="token punctuation">,</span>
    zip<span class="token punctuation">:</span> <span class="token string">"98004"</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span>
    street<span class="token punctuation">:</span> <span class="token string">"1980 Zanker Road"</span><span class="token punctuation">,</span>
                  city<span class="token punctuation">:</span> <span class="token string">"San Jose"</span><span class="token punctuation">,</span>
                  state<span class="token punctuation">:</span> <span class="token string">"CA"</span><span class="token punctuation">,</span>
    zip<span class="token punctuation">:</span> <span class="token string">"95112"</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">]</span>
 <span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></pre><p>
 Notice that we took those multiple documents and turned them into one!&nbsp;
 <strong>This is called embedding documents.</strong>&nbsp;If you embed the locations within your business document,&nbsp;<strong>you can get all of your addresses out all in the same query.</strong>&nbsp;Always put thought into how you structure your data! Making choices on how you deal with associative data at the beginning of a project can save you tons of headaches later in development.</p>
        
        
        
        
        
        
								</div>
						

					
					
					<!-- Modal Inactivity Notice Modal -->
					<div class="modal fade info_modal" id="inactivity_notice_modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
						<div class="modal-dialog" style="margin-top: 272.1px;">
							<div class="modal-content">
								<span class="hide_modal glyphicon glyphicon-remove" data-dismiss="modal" aria-label="Close"></span>
								<div class="modal_header">
									<h4>Inactivity Notice</h4>
									<span class="glyphicon glyphicon-question-sign notice_tooltip pull-right" data-toggle="tooltip" data-placement="right" title="The system keeps track if you are active or not. We are saving the total time you spent on each topic for course improvement and student support purposes."></span>
								</div>
								<div class="modal_body">
									<p>You have been idle for a long time, click the button below if you are you are still there.</p>
									<a href="http://learn.codingdojo.com/m/4/3720/25007#" class="btn btn-primary continue_btn" data-dismiss="modal">CLICK TO CONTINUE</a>
								</div>
							</div>
						</div>
					</div>
					<!-- end of Modal Inactivity Notice Modal -->

					<!-- Log out from another device modal --> <!-- end of Log out from another device modal -->
				</div>
			</div>

		</div>	

		<div class="content_footer_block">
			<a class="site_terms_link" data-target=".privacy_policy_modal" data-toggle="modal">Privacy Policy</a>
			<div id="report_mistake_label_container" class="pull-right">
				<span>To report a mistake, highlight the selection you believe is in error.</span>
			</div>
		</div>

		<!-- cts warning modal -->
		<div class="modal fade info_modal cts_warning_modal" tabindex="-1" role="dialog" aria-hidden="true">
			<div class="modal-dialog" style="margin-top: 272.1px;">
				<div class="modal-content">
					<span class="hide_modal glyphicon glyphicon-remove" data-dismiss="modal" aria-label="Close"></span>
					<form action="http://learn.codingdojo.com/m/4/3720/25007" id="cts_warning_form">
						<div class="modal_header"><h4>Confirm Action</h4></div>
						<div class="modal_body">
							<p>Only <span class="time_passed"></span> had passed since you started this assignment. Are you sure you want to view the Answersheet? The more you code on your own, the more you become a self-sufficient software engineer</p>
							<a href="javascript:void(0);" class="btn btn-default cancel_btn" data-dismiss="modal">CANCEL</a>
							<!-- <a href="javascript:void(0);" class="btn btn-primary submit_btn continue_btn" data-dismiss="modal">CONTINUE</a> -->
							<input type="submit" class="btn btn-primary submit_btn continue_btn" id="view_answersheets" data-dismiss="modal" value="CONTINUE">
						</div>
					</form>
				</div>
			</div>
		</div>

	</div> 

	<!-- Reported a mistake popover -->
	<a href="http://learn.codingdojo.com/m/4/3720/25007#" class="hidden" id="report_mistake_popover" data-placement="bottom" data-original-title="" title=""></a>
	<div class="hidden" id="report_mistake_popover_clone">
		<span class="report_mistake_label">Report a mistake</span>
		<form id="report_mistake_container" action="http://learn.codingdojo.com/report_mistake">
			<h5>Report a mistake</h5>
			<input type="hidden" name="chapter_module_id" value="25007">
			<input type="hidden" name="authenticity_token" value="I2Embjwa2Y+DYKBY723mg0KkrRtDSmr0FTFtDKSxYWA=">
			<input type="hidden" name="course_id" value="1226">
			<input type="hidden" name="track_id" value="4">
			<textarea name="report_mistake_textarea" id="report_mistake_textarea" rows="5" placeholder="Tell us what&#39;s wrong"></textarea>
			<input type="submit" value="SUBMIT" class="btn btn-primary btn-block">
		</form>
	</div>
	<!-- END of Reported a mistake popover -->

	<ul class="create_message_container">
		<!-- Append the Chat here -->
		<li class="chat_counter hidden"> 
			<span class="glyphicon glyphicon-comment"></span> 
			<span id="number_of_hidden_chat"></span>
		</li>
	</ul>
	<div id="content_footer" style="width: 1087px;">	
		<div class="prev_button">  
			<a href="http://learn.codingdojo.com/m/4/3720/25010" class="btn btn-primary previous_button_link unload_link">
				<span class="glyphicon glyphicon-chevron-left"></span>
				Previous
			</a>
			<!-- <span class="glyphicon glyphicon-chevron-left"></span>
			<a href="/m/4/3720/25010" class="previous_button_link unload_link">Prev</a> -->
		</div>
		<a href="javascript:void(0);" class="back_button">Back to Track</a>
		<div class="next_button pull-right">
				<a href="http://learn.codingdojo.com/m/4/3720/25012" class="btn btn-primary next_button_link unload_link">
					Next
					<span class="glyphicon glyphicon-chevron-right"></span>
				</a>
				<!-- <a href="/m/4/3720/25012" class="next_button_link unload_link">Next</a> -->
				<a href="http://learn.codingdojo.com/m/4/3720/25012" class="real_next_link hidden"></a>
				<!-- <span class="glyphicon glyphicon-chevron-right"></span> -->
		</div>
		
		<input type="hidden" id="current_module_id" name="authenticity_token" value="I2Embjwa2Y+DYKBY723mg0KkrRtDSmr0FTFtDKSxYWA=" current-module="25007" course-percentage=""> 
		<div id="linkage" data-target="#inactivity_notice_modal" data-toggle="modal" style="display:none;"></div>
	</div>
	<!-- My Account Modal -->
	  <div id="my_account_modal" tabindex="-1" role="dialog" aria-hidden="true" class="modal fade">
	    <div class="modal-dialog modal-lg">
	      <div class="modal-content">
	      	<span class="hide_modal glyphicon glyphicon-remove" data-dismiss="modal" aria-label="Close"></span>
	        <div class="user_information_block">
	          <form action="http://learn.codingdojo.com/upload_profile_pic" id="upload_profile_pic_form" class="profile_pic" enctype="multipart/form-data" method="post">
	            <input type="hidden" name="authenticity_token" value="I2Embjwa2Y+DYKBY723mg0KkrRtDSmr0FTFtDKSxYWA=">
	            <input id="browse_pic" class="browse_profile_pic hidden" type="file">
	              <label for="browse_pic">
	                <span class="profile_preview">
	                  <img src="./_ Integrating Mongoose_files/profile_pic.png" alt="Ryan"> 
	              </span>
	              </label>
	          </form>
	          <ul class="list-unstyled">
	            <li>Name: Ryan Holstein</li>
	            <li>Email: ryan.c.holstein@biola.edu</li>
	            <li>Password: <span class="password">************</span> <span class="change_password">change password</span></li>
	            <li>Program Type: Onsite Flex</li>
	            <li>Location: Burbank</li>
	            <li>Start Date: March 20, 2017</li>
	            <li>Access Expiration: December 30, 2017</li>
	          </ul>
	        </div>
	        <form class="change_password_block">
	          <ul class="list-unstyled">
	            <li>
	              <span>Old Password:</span>
	              <input type="password" class="old_password_input match">
	            </li>
	            <li>
	              <span>New Password:</span>
	              <input type="password" class="new_password_input match">
	            </li>
	            <li>
	              <span>Confirm New Password:</span>
	              <input type="password" class="confirm_new_password_input match">
	            </li>
	            <li>
	              <button type="button" class="btn btn-primary save_new_password_button">SAVE</button>
	            </li>
	          </ul>
	        </form>
	        <p class="modal-messages"></p>
	      </div>
	    </div>
	  </div>    
	<!-- end of My Account Modal  -->

	<!-- Privacy Policy Modal -->
	<div class="modal fade privacy_policy_modal" tabindex="-1" role="dialog" data-keyboard="">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<span class="hide_modal glyphicon glyphicon-remove" data-dismiss="modal" aria-label="Close"></span>
				
				<div id="terms_of_service">
					<div class="greetings">
						<p id="thank_you_greeting">Thank you for taking the time to learn about our legal policies.</p>
						<p id="greeting">Your privacy is important to us.</p>
					</div>
					<div class="links">
						<p id="privacy_policy">
							<a href="http://www.codingdojo.com/files/Privacy_Policy.pdf" target="_blank">Privacy Policy</a>
						</p>
						<p id="acceptable_use">
							<a href="http://www.codingdojo.com/files/Acceptable_Use_Policy.pdf" target="_blank">Acceptable Use</a>
						</p>
						<p id="site_terms">
							<a href="http://www.codingdojo.com/files/Site_Terms.pdf" target="_blank">Site Terms</a>
						</p>
					</div>
					<a href="javascript:void(0)" class="btn btn-primary" id="close_button" data-dismiss="modal">CLOSE</a>
				</div>
			</div>
		</div>
	</div> 

</section>

<!-- Clone Template -->
<div id="clone_template_container" class="hidden">
	<ul id="chat_item">
		<li data-chat-id="" data-module-id="" class="active_chat chat"> 
		    <input type="checkbox" class="chat_checkbox" id="" checked="checked"> 
		    <div class="chat_container"> 	
		        <div class="chat_header"> 
		            <label for="chat_checkbox_" class="hide_chat"> 
		                <span class="glyphicon glyphicon-comment"></span> 
		                <span class="name"></span> 
		                <span class="glyphicon glyphicon-triangle-bottom"></span> 
		                <span class="glyphicon glyphicon-remove remove_chat"></span> 
		            </label> 
		        </div>  
		        <div class="chat_body"> 
		            <div class="settings"> 
		                <span class="start_this_call glyphicon glyphicon-facetime-video" title="Video call. Click to start a video call."></span>
		            </div> 
		            <div class="conversation_container nano"> 
		                <ul class="nano-content" tabindex="0"> 
		                </ul> 
		            <div class="nano-pane" style="display: none;"><div class="nano-slider" style="transform: translate(0px, 0px);"></div></div></div> 
		            <div class="hidden_div"></div> 
		        </div> 
		        <form class="input_container"> 
		            <textarea name="" class="form-control enter_message" placeholder="Send a message"></textarea> 
		            <input type="hidden"> 
		        </form> 
		    </div> 
		</li>
	</ul>

	<div id="video_walk_through">
		<a class="how_we_did_video"> 
	    	<div class="how_we_did_block">
	        	<div id="video_logo"><img src="./_ Integrating Mongoose_files/play_button.png" alt=""></div> 
	        	<div class="how_we_did_info"> 
	            	<span class="title">Wanna see how we did it?</span> 
	            	<span class="video_time_to_unlock"></span> 
	        	</div> 
	    	</div> 
	     </a>
	</div>

	<ul id="question_clone">
		<li class="question"> 
            <img src="http://learn.codingdojo.com/m/4/3720/25007" alt="profile_picture" class="profile_image"> 
            <div class="right_question_content"> 
                <div class="question_block">
                    <span class="name"></span> 
                    <span class="date"></span> 
                    <span class="glyphicon glyphicon-remove pull-right remove_question" id=""></span> 
                    <p class="main_question"></p> 
                    <a href="http://learn.codingdojo.com/m/4/3720/25007#" class="add_question_answer" id="">Add answer</a> 
                    <span class="middle_dot">·</span>
                    <a href="http://learn.codingdojo.com/m/4/3720/25007#" class="number_of_vote" data-value=""></a> 
                    <button id="" class="vote_up vote_button" value="1"><span class="glyphicon glyphicon-menu-up" aria-hidden="true"></span></button> 
                    <button id="" class="vote_down vote_button" value="-1"><span class="glyphicon glyphicon-menu-down" aria-hidden="true"></span></button> 
                </div>
                <form class="list-unstyled create_answer_container" id="post_answer" action="http://learn.codingdojo.com/helps/post_answer" method="post"> 
                    <img src="http://learn.codingdojo.com/m/4/3720/25007" alt="profile_picture" class="profile_image"> 
                    <div class="create_answer_form"> 
                        <input type="hidden" name="authenticity_token" value="I2Embjwa2Y+DYKBY723mg0KkrRtDSmr0FTFtDKSxYWA=">
                        <input class="answer_id_input" type="hidden" name="answer[question_id]" value="">
                        <textarea class="form-control answer_value" name="answer[text_answer]" rows="2" placeholder=""></textarea>
                        <div class="post_answer_buttons">
                            <button class="btn btn-default cancel_post_answer">CANCEL</button>
                            <button class="btn btn-primary post_reply_answer">ANSWER</button>
                        </div>
                    </div>
                </form>
                <ul class="list-unstyled answers_container">
                </ul> 
            </div>
        </li>
	</ul>

	<ul id="answer_clone">
		<li> 
		    <div class="left_answers_block"> 
		        <img src="http://learn.codingdojo.com/m/4/3720/25007" alt="profile_picture" class="profile_image"> 
		    </div> 
		    <div class="right_answers_block"> 
		        <span class="name"></span> 
		        <span class="date"></span> 
		        <span class="glyphicon glyphicon-remove pull-right remove_answer" id=""></span> 
		        <p></p> 
		        <a href="http://learn.codingdojo.com/m/4/3720/25007#" class="number_of_vote" data-value=""></a> 
		        <button id="" class="vote_up vote_button answer_vote" value="1"><span class="glyphicon glyphicon-menu-up" aria-hidden="true"></span></button> 
		        <button id="" class="vote_down vote_button answer_vote" value="-1"><span class="glyphicon glyphicon-menu-down" aria-hidden="true"></span></button> 
		    </div> 
		</li>
	</ul>
</div>

<!-- Html5 Videos speed Clone -->
<div class="hidden html5_video_speed_clone">
	<div class="btn-group" role="group" aria-label="..."> 
		<button type="button" class="btn btn-default reduce_video_speed"> <span class="glyphicon glyphicon-minus"></span> </button> 
		<button type="button" class="btn btn-default current_speed">1.0</button>
		<button type="button" class="btn btn-default add_video_speed"> <span class="glyphicon glyphicon-plus"></span> </button>
	</div>
</div>

<div id="page_info">
	<input type="hidden" value="http://learn.codingdojo.com/m/4/3720/25007">
	<input type="hidden" value="4">
	<input type="hidden" value="1226">
	<input type="hidden" value="3720">
	<input type="hidden" id="module_id_current" value="25007">
	<input type="hidden" value="12.222.113.226">
	<input type="hidden" value="17011" id="page_current_user" user="Ryan Holstein">
</div>





<div class="quiz_result_details_block" id="quiz_result_details" style="display: none;">
	<div class="quiz_result_user_image">
		<img src="./_ Integrating Mongoose_files/profile_pic.png" alt="Ryan" class="profile_image">
	</div>
	<div class="quiz_result_info">
		<h3 id="user_name"></h3>
		<p id="quiz_date"></p>
	</div>
	<div class="clear"></div>
	<p class="quiz_result_score"></p>
	<div class="quiz_result_content">
	</div>
</div>
		


<script>
	/* for showing of checklist details in chapter module page */

    var checklist_details = JSON.parse('null');
	
    if(checklist_details != null){

        if(Object.keys(checklist_details).length > 0){
            var days = ["", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday"];
            var level = ["", "Basic", "Intermediate", "Advanced", "Hacker"];
            var details_to_append = '<ul class="list-inline information_checklist_list">';

            $.each(checklist_details, function(index, value){
                switch(index){
                    case 'is_optional':
                        status = (value == 1) ? "Optional" : "Mandatory";
                        details_to_append += '<li>'+status+'</li>';
                        break;
                    case 'day':
                        if(value && checklist_details.week != 0){
                            details_to_append += "<li>Deadline: "+days[value]+" of Week "+checklist_details.week+"</li>"
                        }
                        break;
                    case 'difficulty_level':
                        if(value != 0 && value != null)
                        details_to_append += "<li>Difficulty Level: "+level[value]+"</li>";
                        break;
                    case 'estimated_time':
                        if(value != "" && value != null){
                            details_to_append += "<li>Estimated Time: "+value+"</li>";
                        }
                        break;
                }
            });

            details_to_append += "</ul>";  
			$('#assignment-metadata').html(details_to_append)
        }
    }
</script>
<script type="text/javascript" src="http://learn.codingdojo.com/m/4/3720/25007"></script>




	<!-- Modals -->
	<!-- Delete Chapter Modal -->
	<div class="modal fade info_modal delete_chapter_modal" tabindex="-1" role="dialog">
		<div class="modal-dialog" style="margin-top: 272.1px;">
			<div class="modal-content">
				<input type="hidden" name="chapter_id" value="">

				<span class="hide_modal glyphicon glyphicon-remove" data-dismiss="modal" aria-label="Close"></span>
				<div class="modal_header"><h4>Delete Chapter?</h4></div>
				<div class="modal_body">
					<p>Chapter will be permanently deleted. Are you sure?</p>
					<a href="http://learn.codingdojo.com/m/4/3720/25007#" class="btn btn-default cancel_btn" data-dismiss="modal">CANCEL</a>
					<a href="http://learn.codingdojo.com/m/4/3720/25007#" class="btn btn-primary confirm_delete_chapter" data-dismiss="modal">DELETE CHAPTER</a>
				</div>
			</div>
		</div>
	</div>

	<!-- Delete Module Modal -->
	<div class="modal fade info_modal delete_module_modal" tabindex="-1" role="dialog">
		<div class="modal-dialog" style="margin-top: 272.1px;">
			<div class="modal-content">
				<input type="hidden" name="module_id" value="">

				<span class="hide_modal glyphicon glyphicon-remove" data-dismiss="modal" aria-label="Close"></span>
				<div class="modal_header"><h4>Delete Module?</h4></div>
				<div class="modal_body">
					<p>Module will be permanently deleted. Are you sure?</p>
					<a href="http://learn.codingdojo.com/m/4/3720/25007#" class="btn btn-default cancel_btn" data-dismiss="modal">CANCEL</a>
					<a href="http://learn.codingdojo.com/m/4/3720/25007#" class="btn btn-primary confirm_delete_module" data-dismiss="modal">DELETE MODULE</a>
				</div>
			</div>
		</div>
	</div>

	<!-- chapter_module_modal -->
	<div class="modal fade info_modal chapter_module_modal" tabindex="-1" role="dialog">
		<div class="modal-dialog" style="margin-top: 272.1px;">
			<div class="modal-content">
				<input type="hidden" name="chapter_id" value="">

				<span class="hide_modal glyphicon glyphicon-remove" data-dismiss="modal" aria-label="Close"></span>
				<div class="modal_header"><h4>New Chapter</h4></div>
				<div class="modal_body">
					<input id="" type="text" placeholder="Chapter Title" value="">
					<a href="http://learn.codingdojo.com/m/4/3720/25007#" class="btn btn-primary">SAVE</a>
				</div>
			</div>
		</div>
	</div>	

    <script type="text/javascript">
        var io = io.connect('https://learn.codingdojo.com:8787', {force_connection: true, path: '/app1socket'});
        var pair_hangout = false;
        var admin_as_student = "";

        io.on("error", function(){
            console.log('Failed connecting to node js server.');
        });

        if(admin_as_student != "true"){
            io.on('server:logout', function(){
                io.emit("student:signout");

                $.ajax({
                    url: "/before_signout/",
                    type: "get",
                    success: function(values) {
                        if(values.status){
                            window.location.href = "/signout";
                        }
                    }
                });
            });
        }

        $(document).on('ready page:load', function (){
            io.on('need_signin', function(socket_data) {
            	io.emit('student:signin', {user_information: {"id":17011,"first_name":"Ryan","last_name":"Holstein","email":"ryan.c.holstein@biola.edu","image_url":null,"created_at":"2017-02-16T19:42:13.000Z","user_level":1,"applicant_id":26589,"is_automated":null,"address":null,"bootcamp_type":1,"bootcamp_date":"March 20, 2017","bootcamp_location":"9","updated_at":"2017-06-12T19:44:54.231Z","last_visited_url":"/m/4/3720/25007","last_used_filter":null,"group_ids":[172],"is_course_editor":null}, ip_address: $("#page_info input:nth-child(6)").val(), device: navigator.userAgent}, function(data){
            		new_track();
            	});
            });

            if(admin_as_student != "true"){
                io.on('server:warning_duplicate_user', function(data){
                    console.log("warning!!");
                    io.emit("track:logout_duplicate", data);
                });
            }

            function new_track(){
            	io.emit('track:new', {
    	        	url: $("#page_info input:nth-child(1)").val(),
    	        	track_id: $("#page_info input:nth-child(2)").val(),
    	        	course_id: $("#page_info input:nth-child(3)").val(),
    	        	chapter_id: $("#page_info input:nth-child(4)").val(),
    	        	module_id: $("#page_info input:nth-child(5)").val(),
    	        	ip_address: $("#page_info input:nth-child(6)").val()
    	        });
            }

            new_track();

            $("#logout_button").click(function(e){
                e.preventDefault();
                e.stopPropagation();
                io.emit("student:signout");
                window.location.href = "/signout";
            });

            io.on("new_chat_message", function(new_message){
                display_sent_chat_message(new_message);
            });

            io.on("send_new_message", function(message){
                display_received_chat_message(message);
            });

            io.on('make_user_unavailable', function(call_information){
                make_user_unavailable(call_information);
            });

            io.on('make_user_available', function(user){
                make_user_available(user);
            });

            io.on("invite_student", function(call_information){
                display_call_request(call_information);
            });
        });
    </script> 
<div role="log" aria-live="assertive" aria-relevant="additions" class="ui-helper-hidden-accessible"></div></body></html>